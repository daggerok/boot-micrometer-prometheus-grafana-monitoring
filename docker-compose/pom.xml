<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>boot-micrometer-prometheus-grafana-monitoring</artifactId>
    <groupId>com.github.daggerok</groupId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>docker-compose</artifactId>
  <packaging>pom</packaging>
  <profiles>
    <profile>
      <id>postgres-start</id>
      <build>
        <defaultGoal>docker-compose:up</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <services>postgres</services>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>postgres-stop</id>
      <build>
        <defaultGoal>docker-compose:down</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <services>postgres</services>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>backend-start</id>
      <build>
        <defaultGoal>docker-compose:up</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <services>backend</services>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>backend-stop</id>
      <build>
        <defaultGoal>docker-compose:down</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <services>postgres</services>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>down</id>
      <build>
        <defaultGoal>docker-compose:down</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.dkanejs.maven.plugins</groupId>
          <artifactId>docker-compose-maven-plugin</artifactId>
          <version>${docker-compose-maven-plugin.version}</version>
          <configuration>
            <build>true</build>
            <detail>true</detail>
            <verbose>false</verbose>
            <detachedMode>true</detachedMode>
            <ignorePullFailures>true</ignorePullFailures>
            <removeImagesType>local</removeImagesType>
            <removeImages>true</removeImages>
            <removeOrphans>true</removeOrphans>
            <removeVolumes>true</removeVolumes>
            <composeFile>${project.basedir}/docker-compose.yaml</composeFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
          <configuration>
            <follow>false</follow>
            <verbose>true</verbose>
            <useColor>true</useColor>
            <logDate>default</logDate>
            <autoPull>always</autoPull>
            <keepRunning>false</keepRunning>
            <watchInterval>500</watchInterval>
            <allContainers>true</allContainers>
            <removeVolumes>true</removeVolumes>
            <imagePullPolicy>IfNotPresent</imagePullPolicy>
            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
            <images>
              <image>
                <alias>system</alias>
                <external>
                  <type>compose</type>
                  <basedir>src/main/resources</basedir>
                  <composeFile>../../../docker-compose.yaml</composeFile>
                </external>
                <run>
                  <wait>
                    <http>
                      <url>http://127.0.0.1:8080/actuator/health</url>
                      <method>GET</method>
                      <status>200</status>
                    </http>
                    <time>100000</time>
                  </wait>
                </run>
              </image>
            </images>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
